#
# Autogenerated by Thrift Compiler (0.18.1)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'spec_types'

module YetiThriftTest
  module SimpleService
    class Client
      include ::Thrift::Client

      def mutate(input, add, concat, toggle)
        send_mutate(input, add, concat, toggle)
        return recv_mutate()
      end

      def send_mutate(input, add, concat, toggle)
        send_message('mutate', Mutate_args, :input => input, :add => add, :concat => concat, :toggle => toggle)
      end

      def recv_mutate()
        fname, mtype, rseqid = receive_message_begin()
        handle_exception(mtype)
        if reply_seqid(rseqid)==false
          raise "seqid reply faild"
        end
        result = receive_message(Mutate_result)
        return result.success unless result.success.nil?
        raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'mutate failed: unknown result')
      end

    end

    class Processor
      include ::Thrift::Processor

      def process_mutate(seqid, iprot, oprot)
        args = read_args(iprot, Mutate_args)
        result = Mutate_result.new()
        result.success = @handler.mutate(args.input, args.add, args.concat, args.toggle)
        write_result(result, oprot, 'mutate', seqid)
      end

    end

    # HELPER FUNCTIONS AND STRUCTURES

    class Mutate_args
      include ::Thrift::Struct, ::Thrift::Struct_Union
      INPUT = 1
      ADD = 2
      CONCAT = 3
      TOGGLE = 4

      FIELDS = {
        INPUT => {:type => ::Thrift::Types::STRUCT, :name => 'input', :class => ::YetiThriftTest::SimpleStruct},
        ADD => {:type => ::Thrift::Types::I32, :name => 'add'},
        CONCAT => {:type => ::Thrift::Types::STRING, :name => 'concat'},
        TOGGLE => {:type => ::Thrift::Types::BOOL, :name => 'toggle'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

    class Mutate_result
      include ::Thrift::Struct, ::Thrift::Struct_Union
      SUCCESS = 0

      FIELDS = {
        SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => ::YetiThriftTest::SimpleStruct}
      }

      def struct_fields; FIELDS; end

      def validate
      end

      ::Thrift::Struct.generate_accessors self
    end

  end

end
